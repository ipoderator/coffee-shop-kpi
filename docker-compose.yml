# Coffee KPI Dashboard - Docker Compose
# Полная настройка с базой данных и приложением

version: '3.8'

services:
  # Основное приложение
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coffee-kpi-app
    ports:
      - '5000:5000'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://coffee_user:coffee_password@db:5432/coffee_kpi
      - PORT=5000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - coffee-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5000/']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # База данных PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: coffee-kpi-db
    environment:
      - POSTGRES_DB=coffee_kpi
      - POSTGRES_USER=coffee_user
      - POSTGRES_PASSWORD=coffee_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    restart: unless-stopped
    networks:
      - coffee-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U coffee_user -d coffee_kpi']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Nginx reverse proxy (опционально)
  nginx:
    image: nginx:alpine
    container_name: coffee-kpi-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - coffee-network
    profiles:
      - production

  # Redis для кеширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: coffee-kpi-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - coffee-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  coffee-network:
    driver: bridge
